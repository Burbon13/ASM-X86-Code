     1                                  ;Se da un fisier text. Sa se citeasca continutul fisierului, sa se determine litera mare (uppercase) cu cea mai mare frecventa si sa se afiseze acea litera, impreuna cu frecventa acesteia. 
     2                                  ;Numele fisierului text este definit in segmentul de date.
     3                                  bits 32
     4                                  
     5                                  global start
     6                                  
     7                                  extern exit, fopen, fclose, fread, printf
     8                                  import exit msvcrt.dll 
     9                                  import fopen msvcrt.dll 
    10                                  import fread msvcrt.dll 
    11                                  import fclose msvcrt.dll 
    12                                  import printf msvcrt.dll
    13                                  
    14                                  segment data use32 class=data
    15 00000000 696E7075742E747874-         nume_fisier db "input.txt", 0   ; numele fisierului care va fi deschis
    15 00000009 00                 
    16 0000000A 7200                        mod_acces db "r", 0             ; modul de deschidere a fisierului; r - pentru scriere. fisierul trebuie sa existe 
    17 0000000C FFFFFFFF                    descriptor_fis dd -1            ; variabila in care vom salva descriptorul fisierului - necesar pentru a putea face referire la fisier
    18 00000010 00000000                    nr_car_citite dd 0              ; variabila in care vom salva numarul de caractere citit din fisier in etapa curenta
    19                                      len equ 100                     ; numarul maxim de elemente citite din fisier intr-o etapa
    20 00000014 <res 00000064>              buffer resb len                 ; sirul in care se va citi textul din fisier
    21 00000078 00<rept>                    vec_ap times 27 db 0
    22 00000093 00000000                    nr_ap dd 0
    23 00000097 00000000                    litera dd 0
    24 0000009B 256320646520617461-         format db "%c de atatea ori: %d", 0
    24 000000A4 746561206F72693A20-
    24 000000AD 256400             
    25                                  
    26                                  segment code use32 class=code
    27                                      start:
    28 00000000 68[0A000000]                    push dword mod_acces
    29 00000005 68[00000000]                    push dword nume_fisier
    30 0000000A FF15[00000000]                  call [fopen]
    31 00000010 83C408                          add esp, 4*2
    32                                          
    33 00000013 83F800                          cmp eax, 0                  
    34 00000016 0F8486000000                    je final
    35                                          
    36 0000001C A3[0C000000]                    mov [descriptor_fis], eax
    37                                          
    38                                          parsare:
    39 00000021 FF35[0C000000]                      push dword [descriptor_fis]
    40 00000027 6A64                                push dword len
    41 00000029 6A01                                push dword 1
    42 0000002B 68[14000000]                        push dword buffer
    43 00000030 FF15[00000000]                      call [fread]
    44 00000036 83C410                              add esp, 4*4
    45                                              
    46 00000039 83F800                              cmp eax, 0
    47 0000003C 742A                                je cleanup
    48                                              
    49 0000003E 89C1                                mov ecx, eax
    50 00000040 B800000000                          mov eax, 0
    51 00000045 BE[14000000]                        mov esi, buffer
    52                                              
    53                                              parcurgere:
    54 0000004A AC                                      lodsb 
    55                                                  
    56 0000004B 3C41                                    cmp al, 'A' 
    57 0000004D 7215                                    jb next_parc
    58 0000004F 3C5A                                    cmp al, 'Z'
    59 00000051 7711                                    ja next_parc
    60                                                  
    61 00000053 2C41                                    sub al, 'A'
    62 00000055 8A98[78000000]                          mov bl, [vec_ap + eax]
    63 0000005B 80C301                                  add bl, 1
    64 0000005E 8898[78000000]                          mov [vec_ap + eax], bl
    65                                                  
    66                                                  next_parc:
    67 00000064 E2E4                                        loop parcurgere
    68                                              
    69 00000066 EBB9                                jmp parsare
    70                                              
    71                                          cleanup:
    72 00000068 FF35[0C000000]                      push dword [descriptor_fis]
    73 0000006E FF15[00000000]                      call [fclose]
    74 00000074 83C404                              add esp, 4
    75                                              
    76 00000077 B900000000                          mov ecx, 0
    77 0000007C B800000000                          mov eax, 0
    78                                              
    79                                              cautare_max:
    80                                                  
    81 00000081 8A81[78000000]                          mov al, [vec_ap + ecx]
    82 00000087 3B05[93000000]                          cmp eax, [nr_ap]
    83                                                  
    84 0000008D 760B                                    jna nu_gasit
    85                                                  
    86 0000008F 890D[97000000]                          mov [litera], ecx
    87 00000095 A3[93000000]                            mov [nr_ap], eax
    88                                                  
    89                                                  nu_gasit:
    90 0000009A 41                                          inc ecx
    91 0000009B 83F91A                                      cmp ecx, 26
    92 0000009E 7402                                        je final
    93 000000A0 EBDF                                        jmp cautare_max
    94                                          
    95                                          final:
    96 000000A2 FF35[93000000]                      push dword [nr_ap]
    97 000000A8 8B0D[97000000]                      mov ecx, [litera]
    98 000000AE 83C141                              add ecx, 65
    99 000000B1 51                                  push ecx
   100 000000B2 68[9B000000]                        push dword format
   101 000000B7 FF15[00000000]                      call [printf]
   102 000000BD 83C40C                              add esp, 4 * 3
   103                                              
   104 000000C0 6A00                                push dword 0
   105 000000C2 FF15[00000000]                      call [exit]
