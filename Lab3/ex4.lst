     1                                  bits 32
     2                                  
     3                                  global start
     4                                  
     5                                  extern exit 
     6                                  import exit msvcrt.dll
     7                                  
     8                                  segment data use32 class=data
     9 00000000 0300                        a dw 3 ;2 word
    10 00000002 37                          b db 55 ;1 byte
    11 00000003 0500                        c dw 5 ;2 word
    12 00000005 02000000                    d dd 2 ;4 double word
    13                                      ;3 + 55 / 3 + 6 / 3
    14                                      ;3 + 18 + 2 = 23
    15                                      
    16                                  segment code use32 class=code
    17                                  start:
    18                                      ;a + b / (c - 2) + d * 3 / a
    19                                      
    20 00000000 A0[02000000]                mov al, [b]
    21 00000005 B400                        mov ah, 0
    22 00000007 66BA0000                    mov dx, 0  ;dx:ax = b
    23                                      
    24 0000000B 668B1D[03000000]            mov bx, [c]
    25 00000012 6683EB02                    sub bx, 2  ;bx = c - 2
    26                                      
    27 00000016 66F7F3                      div bx ;ax = b / (c - 2)
    28                                      
    29 00000019 660305[00000000]            add ax, [a] ;ax = a + b / (c - 2)
    30                                      
    31 00000020 6689C3                      mov bx, ax ;bx = a + b / (c - 2)
    32                                      
    33 00000023 B803000000                  mov eax, 3
    34 00000028 F725[05000000]              mul dword [d] ;edx:eax = d * 3
    35                                      
    36 0000002E B900000000                  mov ecx, 0
    37 00000033 668B0D[00000000]            mov cx, [a]
    38 0000003A F7F1                        div ecx  ;eax = d * 3 / a
    39                                      
    40 0000003C B900000000                  mov ecx, 0
    41 00000041 6689D9                      mov cx, bx ;exc = a + b / (c - 2)
    42                                      
    43 00000044 01C8                        add eax, ecx ; a + b / (c - 2) + d * 3 / a
    44                                      
    45 00000046 6A00                        push dword 0
    46 00000048 FF15[00000000]              call [exit]
