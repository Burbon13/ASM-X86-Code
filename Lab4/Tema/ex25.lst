     1                                  bits 32
     2                                  
     3                                  global start
     4                                  
     5                                  extern exit
     6                                  import exit msvcrt.dll
     7                                  
     8                                  segment data use32 class=data
     9 00000000 0500                        a dw 5 ;word
    10 00000002 FE                          b db -2 ;byte
    11 00000003 03000000                    c dd 3 ;double word
    12 00000007 0400000000000000            x dq 4 ;quad word
    13                                      
    14                                  segment code use32 class=code
    15                                  start:
    16                                      ;(a*a+b+x)/(b+b)+c*c
    17                                      ;cu semn
    18                                      
    19 00000000 66A1[00000000]              mov ax, [a]
    20 00000006 66F725[00000000]            mul word [a] ;dx:ax = a*a
    21                                      
    22 0000000D 6689C3                      mov bx,ax
    23 00000010 6689D1                      mov cx,dx ;cx:bx = a*a
    24                                      
    25 00000013 A0[02000000]                mov al, [b]
    26 00000018 6698                        cbw    
    27 0000001A 6699                        cwd ;dx:ax = b
    28                                      
    29 0000001C 6601D8                      add ax, bx
    30 0000001F 6611CA                      adc dx, cx ;dx:ax = a*a+b
    31                                      
    32 00000022 6652                        push dx
    33 00000024 6650                        push ax
    34 00000026 58                          pop eax
    35 00000027 99                          cdq ;edx:eax = a*a+b
    36                                      
    37 00000028 0305[07000000]              add eax, dword [x]
    38 0000002E 1315[0B000000]              adc edx, dword [x+4] ;edx:eax = a*a+b+x
    39                                      
    40 00000034 89C3                        mov ebx, eax
    41                                      
    42 00000036 A0[02000000]                mov al, [b]
    43 0000003B 6698                        cbw
    44 0000003D 98                          cwde ;eax = b
    45                                      
    46 0000003E 89C1                        mov ecx, eax
    47 00000040 89D8                        mov eax,ebx
    48 00000042 F7F1                        div ecx ;eax = (a*a+b+x) / (b+b)
    49 00000044 99                          cdq ;edx:eax = -||-
    50                                      
    51 00000045 89C3                        mov ebx, eax
    52 00000047 89D1                        mov ecx, edx
    53                                      
    54 00000049 A1[03000000]                mov eax, [c]
    55 0000004E F7E0                        mul eax ;edx:eax = c*c
    56                                      
    57 00000050 01D8                        add eax, ebx
    58 00000052 11CA                        adc edx, ecx ;edx:eax = (a*a+b+x) / (b+b) + c*c
    59                                      
    60                                      
    61 00000054 6A00                        push dword 0
    62 00000056 FF15[00000000]              call [exit]
