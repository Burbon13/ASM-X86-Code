     1                                  ;Sa se copieze octetii inferiori wordurilor care sunt divizibili cu 3 intr-un sir destinatie
     2                                  ; esi-si : indexi ptr siruri sursa, edi-di : indexi ptr siruri destinatie
     3                                  bits 32
     4                                  
     5                                  global start
     6                                  
     7                                  extern exit, printf
     8                                  import exit msvcrt.dll
     9                                  import printf msvcrt.dll
    10                                  
    11                                  segment data use32 class=data
    12 00000000 1300340034120C00            s dw 13h,34h,1234h,0ch
    13                                      ls equ $ - s 
    14 00000008 00<rept>                    d times ls db 0 
    15 00000010 00000000                    ld dd 0
    16 00000014 2578                        mesaj db "%x"
    17                                  
    18                                  segment code use32 class=code
    19                                      start:
    20 00000000 BE00000000                      mov esi, 0
    21 00000005 BF00000000                      mov edi, 0
    22                                          
    23                                      for.sir:
    24 0000000A 83FE08                          cmp esi, ls
    25 0000000D 7425                            je end.for
    26                                          
    27 0000000F 8A86[00000000]                  mov al, [s+esi]
    28 00000015 6698                            cbw
    29 00000017 B303                            mov bl, 3
    30 00000019 F6F3                            div bl
    31                                          
    32 0000001B 80FC00                          cmp ah, 0
    33 0000001E 750F                            jnz next
    34                                          ;am gasit multiplu de 3
    35 00000020 8A86[00000000]                  mov al, [s+esi]
    36 00000026 8887[08000000]                  mov [d+edi], al
    37 0000002C 83C701                          add edi, 1
    38                                          
    39                                      next:
    40 0000002F 83C602                          add esi, 2
    41 00000032 EBD6                            jmp for.sir
    42                                          
    43                                      end.for:
    44 00000034 893D[10000000]                  mov [ld], edi
    45                                      
    46 0000003A BE00000000                      mov esi, 0
    47                                          
    48                                      for.afis:
    49 0000003F 3B35[10000000]                  cmp esi, [ld]
    50 00000045 741F                            je end.afis
    51                                          
    52 00000047 60                              pushad
    53 00000048 8A86[08000000]                  mov al, [d+esi]
    54 0000004E 6698                            cbw
    55 00000050 98                              cwde
    56 00000051 50                              push eax
    57 00000052 68[14000000]                    push dword mesaj
    58 00000057 FF15[00000000]                  call [printf]
    59 0000005D 83C408                          add esp, 4 * 2
    60 00000060 61                              popad
    61 00000061 83C601                          add esi,1
    62 00000064 EBD9                            jmp for.afis
    63                                          
    64                                      end.afis:
    65 00000066 6A00                            push dword 0
    66 00000068 FF15[00000000]                  call [exit]
