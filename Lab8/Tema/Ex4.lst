     1                                  ;Dandu-se doua siruri de octeti sa se calculeze toate pozitiile unde al doilea sir apare ca subsir in primul sir.
     2                                  bits 32
     3                                  
     4                                  global start
     5                                  
     6                                  extern exit, printf
     7                                  import exit msvcrt.dll
     8                                  import printf msvcrt.dll
     9                                  
    10                                  segment data use32 class=data
    11 00000000 010305030503020305-         s1 db 1,3,5,3,5,3,2,3,5,3,2,3,5,3,5,3,3,5,3
    11 00000009 030203050305030305-
    11 00000012 03                 
    12                                      ls1 equ $ - s1
    13 00000013 030503                      s2 db 3,5,3
    14                                      ls2 equ $ - s2
    15 00000016 25642000                    mesaj db "%d ", 0
    16                                      
    17                                  segment code use32 class=code
    18                                      start:
    19 00000000 BE[00000000]                    mov esi, s1
    20 00000005 BF[13000000]                    mov edi, s2
    21 0000000A B913000000                      mov ecx, ls1
    22 0000000F 83E903                          sub ecx, ls2
    23 00000012 41                              inc ecx
    24                                          
    25                                          ripit:
    26 00000013 89F2                                mov edx, esi
    27                                          
    28                                              comper:
    29                                                  ;veririf daca am terminat tot sirul s2
    30 00000015 B8[13000000]                            mov eax, s2
    31 0000001A 83C003                                  add eax, ls2
    32 0000001D 39C7                                    cmp edi, eax
    33 0000001F 7302                                    jae gasit
    34 00000021 EB1E                                    jmp next
    35                                              
    36                                                  gasit:
    37 00000023 89F3                                        mov ebx, esi
    38 00000025 81EB[00000000]                              sub ebx, s1 ;in ebx avem pozitia
    39 0000002B 83EB02                                      sub ebx, 2
    40                                                  
    41 0000002E 60                                          pushad
    42                                                  
    43 0000002F 53                                          push ebx
    44 00000030 68[16000000]                                push dword mesaj
    45 00000035 FF15[00000000]                              call [printf]
    46 0000003B 83C408                                      add esp, 4 * 2
    47                                                  
    48 0000003E 61                                          popad
    49                                                  
    50 0000003F EB05                                        jmp exit_comper
    51                                                  
    52                                                  next:
    53 00000041 A6                                          cmpsb
    54 00000042 7502                                        jne exit_comper
    55                                              
    56 00000044 EBCF                                jmp comper
    57                                              exit_comper:
    58                                          
    59                                          
    60 00000046 89D6                                mov esi, edx
    61 00000048 BF[13000000]                        mov edi, s2
    62 0000004D 46                                  inc esi
    63                                          
    64 0000004E E2C3                            loop ripit
    65                                          
    66 00000050 6A00                            push dword 0
    67 00000052 FF15[00000000]                  call [exit]
