     1                                  ;Se da un sir de octeti 'input' si inca doua siruri de dimensiune N fiecare, 'src' si 'dst'. Sa se obtina un nou sir 'output' din sirul 'input' in care se vor inlocui toti octetii cu valoarea src[i] cu dst[i], unde 
     2                                  bits 32
     3                                  
     4                                  global start
     5                                  
     6                                  extern exit
     7                                  import exit msvcrt.dll
     8                                  
     9                                  segment data use32 class=data
    10 00000000 01030407030603082A-         sir db 1,3,4,7,3,6,3,8,42,6,2,4,2,3,41
    10 00000009 060204020329       
    11                                      lsir equ $ - sir
    12 0000000F 030708                      src db 3,7,8
    13 00000012 450001                      dst db 69,0,1
    14                                      ln equ $ - src
    15 00000015 <res 0000000F>              output resb lsir
    16                                      
    17                                  segment code use32 class=code
    18                                      start:
    19                                          
    20 00000000 B90F000000                      mov ecx, lsir
    21 00000005 BE[00000000]                    mov esi, sir
    22 0000000A BF[15000000]                    mov edi, output
    23                                          
    24                                          ripit:  
    25                                          
    26 0000000F AC                                  lodsb ;al = nr
    27                                              
    28                                              ;verificam daca gasim inlocuitor
    29                                              
    30 00000010 89FB                                mov ebx, edi
    31 00000012 BF[0F000000]                        mov edi, src
    32                                                          
    33                                              compar:
    34                                                  
    35 00000017 81FF[12000000]                          cmp edi, dst
    36 0000001D 7305                                    jae same ;am iterat prin toate elementele
    37                                                  
    38 0000001F AE                                      scasb ;comparam al cu src[i]
    39                                                  
    40 00000020 7407                                    je change
    41                                              
    42 00000022 EBF3                                jmp compar
    43                                              
    44                                              same:
    45 00000024 89DF                                    mov edi, ebx
    46 00000026 AA                                      stosb
    47                                                  
    48 00000027 EB17                                    jmp nextr
    49                                                  
    50                                              change: ;ebx = output      edi = src
    51                                                  ;push ebx ;locatia unde pun
    52                                                  
    53 00000029 56                                      push esi
    54                                                  
    55 0000002A 4F                                      dec edi
    56 0000002B 89FE                                    mov esi, edi
    57 0000002D 81EE[0F000000]                          sub esi, src
    58 00000033 81C6[12000000]                          add esi, dst
    59                                            
    60 00000039 AC                                      lodsb
    61                                                  
    62 0000003A 5E                                      pop esi
    63 0000003B 89DF                                    mov edi, ebx
    64 0000003D AA                                      stosb
    65                                                  
    66 0000003E EB00                                    jmp nextr
    67                                          
    68                                          nextr:
    69 00000040 E2CD                            loop ripit
    70                                          
    71 00000042 6A00                            push dword 0
    72 00000044 FF15[00000000]                  call [exit]
