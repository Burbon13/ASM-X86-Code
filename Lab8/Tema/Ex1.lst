     1                                  ;Se dau doua siruri de caractere ordonate alfabetic s1 si s2. Sa se construiasca prin interclasare sirul ordonat s3 care sa contina toate elementele din s1 si s2.
     2                                  bits 32
     3                                  
     4                                  global start
     5                                  
     6                                  extern exit
     7                                  import exit msvcrt.dll
     8                                  
     9                                  segment data use32 class=data
    10 00000000 010305070D0F                s1 db 1,3,5,7,13,15
    11                                      ls1 equ $ - s1
    12 00000006 020406080A0C                s2 db 2,4,6,8,10,12
    13                                      ls2 equ $ - s2
    14 0000000C <res 0000000C>              s3 resb ls1 + ls2
    15                                      
    16                                  segment code use32 class=code
    17                                      start:
    18 00000000 BE[00000000]                    mov esi, s1
    19 00000005 BF[06000000]                    mov edi, s2
    20 0000000A BB[0C000000]                    mov ebx, s3
    21                                          
    22                                          repeta:
    23 0000000F B8[00000000]                        mov eax, s1
    24 00000014 83C006                              add eax, ls1
    25 00000017 39C6                                cmp esi, eax
    26 00000019 7344                                jae cmpl_s2
    27                                              
    28 0000001B B8[06000000]                        mov eax, s2
    29 00000020 83C006                              add eax, ls2
    30 00000023 39C7                                cmp edi, eax
    31 00000025 7325                                jae cmpl_s1
    32                                              
    33 00000027 A6                                  cmpsb
    34 00000028 730F                                jae incarca_s2
    35 0000002A EB00                                jmp incarca_s1
    36                                              
    37                                              incarca_s1:
    38 0000002C 4E                                      dec esi
    39 0000002D 89FA                                    mov edx, edi
    40 0000002F 89DF                                    mov edi, ebx
    41 00000031 A4                                      movsb
    42 00000032 89FB                                    mov ebx, edi
    43 00000034 89D7                                    mov edi, edx
    44 00000036 4F                                      dec edi
    45 00000037 EBD6                                    jmp repeta
    46                                              
    47                                              incarca_s2:
    48 00000039 89F0                                    mov eax, esi
    49 0000003B 89FE                                    mov esi, edi
    50 0000003D 4E                                      dec esi
    51 0000003E 89FA                                    mov edx, edi
    52 00000040 89DF                                    mov edi, ebx
    53 00000042 A4                                      movsb
    54 00000043 89FB                                    mov ebx, edi
    55 00000045 89D7                                    mov edi, edx
    56 00000047 89C6                                    mov esi, eax
    57 00000049 4E                                      dec esi
    58 0000004A EBC3                                    jmp repeta
    59                                          
    60                                          
    61                                          cmpl_s1:
    62 0000004C 89DF                                mov edi, ebx
    63                                              
    64                                              salt:
    65 0000004E B8[00000000]                            mov eax, s1
    66 00000053 83C006                                  add eax, ls1
    67 00000056 39C6                                    cmp esi, eax
    68 00000058 731A                                    jae final
    69 0000005A A4                                      movsb
    70 0000005B EBF1                                    jmp salt
    71                                             
    72 0000005D EB15                                jmp final
    73                                          
    74                                          cmpl_s2:
    75 0000005F 89FE                                mov esi, edi
    76 00000061 89DF                                mov edi, ebx
    77                                              
    78                                              salt2:
    79 00000063 B8[06000000]                            mov eax, s2
    80 00000068 83C006                                  add eax, ls2
    81 0000006B 39C6                                    cmp esi, eax
    82 0000006D 7305                                    jae final
    83 0000006F A4                                      movsb
    84 00000070 EBF1                                    jmp salt2
    85                                                         
    86 00000072 EB00                                jmp final
    87                                          
    88                                          final:
    89 00000074 6A00                                push dword 0
    90 00000076 FF15[00000000]                      call [exit]
